--- netax25/ax25.h.orig	Fri Apr 30 13:59:17 1999
+++ netax25/ax25.h	Fri Apr 30 14:17:16 1999
@@ -36,6 +36,7 @@
 #define AX25_IDLE	9
 #define	AX25_PACLEN	10
 #define AX25_IPMAXQUEUE 11
+#define AX25_IAMDIGI	12
 #define AX25_KILL	99
 
 /* AX.25 socket ioctls: */
@@ -48,6 +49,9 @@
 #define SIOCAX25SETPARMS	(SIOCPROTOPRIVATE+6)
 #define SIOCAX25OPTRT		(SIOCPROTOPRIVATE+7)
 #define SIOCAX25CTLCON		(SIOCPROTOPRIVATE+8)
+#define SIOCAX25GETINFO		(SIOCPROTOPRIVATE+9)
+#define SIOCAX25ADDFWD		(SIOCPROTOPRIVATE+10)
+#define SIOCAX25DELFWD		(SIOCPROTOPRIVATE+11)
 
 /* unknown: */
 #define AX25_NOUID_DEFAULT	0
@@ -101,6 +105,25 @@
     ax25_address dest_addr;
     unsigned int cmd;
     unsigned long arg;
+    unsigned char digi_count;
+    ax25_address digi_addr[AX25_MAX_DIGIS];
+  };
+
+struct ax25_info_struct 
+  {
+    unsigned int  n2, n2count;
+    unsigned int t1, t1timer;
+    unsigned int t2, t2timer;
+    unsigned int t3, t3timer;
+    unsigned int idle, idletimer;
+    unsigned int state;
+    unsigned int rcv_q, snd_q;
+  };
+
+struct ax25_fwd_struct 
+  {
+    ax25_address port_from;
+    ax25_address port_to;
   };
 
 /* AX.25 route structure: */
--- netrom/netrom.h.orig	Fri Apr 30 14:17:53 1999
+++ netrom/netrom.h	Fri Apr 30 14:19:52 1999
@@ -29,6 +29,7 @@
 #define NETROM_T2	2
 #define NETROM_N2	3
 #define NETROM_PACLEN	5
+#define	NETROM_T4	6
 
 #define NETROM_KILL	99
 
@@ -45,6 +46,8 @@
     char mnemonic[7];
     ax25_address neighbour;
     unsigned int obs_count;
+    unsigned int ndigis;
+    ax25_address digipeaters[AX25_MAX_DIGIS];
   };
 
 /* NetRom socket ioctls: */
--- netrose/rose.h.orig	Fri Apr 30 14:20:41 1999
+++ netrose/rose.h	Fri Apr 30 14:24:55 1999
@@ -46,6 +46,7 @@
 #define	SIOCRSACCEPT		(SIOCPROTOPRIVATE + 3)
 #define	SIOCRSCLRRT		(SIOCPROTOPRIVATE + 4)
 #define	SIOCRSGL2CALL		(SIOCPROTOPRIVATE + 5)
+#define	SIOCRSGFACILITIES	(SIOCPROTOPRIVATE + 6)
 
 #define	ROSE_DTE_ORIGINATED	0x00
 #define	ROSE_NUMBER_BUSY	0x01
@@ -73,6 +74,15 @@
   ax25_address	srose_digi;
 };
 
+struct full_sockaddr_rose 
+{
+  sa_family_t srose_family;
+  rose_address srose_addr;
+  ax25_address srose_call;
+  unsigned int srose_ndigis;
+  ax25_address srose_digis[ROSE_MAX_DIGIS];
+};
+
 struct rose_route_struct
 {
   rose_address address;
@@ -87,6 +97,18 @@
 {
   unsigned char	cause;
   unsigned char	diagnostic;
+};
+
+struct rose_facilities_struct 
+{
+  rose_address source_addr,   dest_addr;
+  ax25_address source_call,   dest_call;
+  unsigned char source_ndigis, dest_ndigis;
+  ax25_address source_digis[ROSE_MAX_DIGIS];
+  ax25_address dest_digis[ROSE_MAX_DIGIS];
+  unsigned int rand;
+  rose_address fail_addr;
+  ax25_address fail_call;
 };
 
 #endif	/* netrose/rose.h */
